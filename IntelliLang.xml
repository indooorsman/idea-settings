<application>
  <component name="LanguageInjectionConfiguration">
    <injection language="SQL" injector-id="js">
      <display-name>SQL select/delete/insert/update/create</display-name>
      <place disabled="true"><![CDATA[jsLiteralExpression().withText(string().matchesBrics("[\"'`] *(WITH .* AS *\\()? *(((SELECT|DELETE) .*FROM)|((INSERT|REPLACE) .*INTO)|(UPDATE .* SET)|((CREATE|DROP|ALTER) +((TEMPORARY )?TABLE|(UNIQUE )?INDEX))) .*[\"'`]?"))]]></place>
    </injection>
    <injection language="SQL" injector-id="js">
      <display-name>SQL tagged string</display-name>
      <place disabled="true"><![CDATA[taggedString("sql")]]></place>
      <templateTag>sql</templateTag>
    </injection>
    <injection language="SQL" injector-id="js">
      <display-name>SQL update</display-name>
      <place disabled="true"><![CDATA[jsLiteral().withStringValue(string().matchesBrics(" *UPDATE .* SET .*"))]]></place>
    </injection>
    <injection language="TSQL" injector-id="js">
      <display-name>Transact-SQL declare</display-name>
      <place disabled="true"><![CDATA[jsLiteralExpression().withText(string().matchesBrics("[\"'`] *DECLARE +\\@.*[\"'`]?"))]]></place>
    </injection>
    <injection language="SQLite" injector-id="js">
      <display-name>flash.data (SQLite)</display-name>
      <place disabled="true"><![CDATA[jsLiteralExpression().and(asAssignedValue("text", "*", "dbStatement"))]]></place>
      <place disabled="true"><![CDATA[jsLiteralExpression().and(asAssignedValue("text", "*", "statement", "st").withText(string().matchesBrics("[\"'`] *(((SELECT|DELETE) .*FROM)|((INSERT|REPLACE) .*INTO)|(UPDATE .*SET)|((CREATE|DROP|ALTER) +(TABLE|INDEX))) .*[\"'`]?")))]]></place>
      <place disabled="true"><![CDATA[jsLiteralExpression().and(asAssignedValue("text", "flash.data.SQLStatement"))]]></place>
    </injection>
  </component>
</application>